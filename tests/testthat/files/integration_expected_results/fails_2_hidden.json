{
  "test_file_results": [
    {
      "filename": "files/integration_test_cases/q1.R",
      "points": null,
      "test_case_results": [
        {
          "passed": true,
          "error": "",
          "test_case": {
            "name": "q1-1",
            "code": "{\n    testthat::expect_true(x >= 1)\n    testthat::expect_true(x <= 3)\n}",
            "points": 1,
            "hidden": false,
            "success_message": null,
            "failure_message": null
          }
        },
        {
          "passed": true,
          "error": "",
          "test_case": {
            "name": "q1-2",
            "code": "{\n    testthat::expect_equal(x, 2)\n}",
            "points": 1,
            "hidden": true,
            "success_message": null,
            "failure_message": null
          }
        }
      ]
    },
    {
      "filename": "files/integration_test_cases/q2.R",
      "points": null,
      "test_case_results": [
        {
          "passed": true,
          "error": "",
          "test_case": {
            "name": "q2-1",
            "code": "{\n    testthat::expect_equal(square(1), 1)\n    testthat::expect_equal(square(-1), 1)\n}",
            "points": 1,
            "hidden": false,
            "success_message": "square works for 1 and -1",
            "failure_message": "square doesn't work for 1 and/or -1"
          }
        },
        {
          "passed": false,
          "error": "square(2.5) (`actual`) not equal to 6.25 (`expected`).\n\n  `actual`: 1\n`expected`: 6",
          "test_case": {
            "name": "q2-2",
            "code": "{\n    testthat::expect_equal(square(2.5), 6.25)\n}",
            "points": 2,
            "hidden": true,
            "success_message": null,
            "failure_message": null
          }
        }
      ]
    },
    {
      "filename": "files/integration_test_cases/q3.R",
      "points": null,
      "test_case_results": [
        {
          "passed": true,
          "error": "",
          "test_case": {
            "name": "q3-1",
            "code": "{\n    testthat::expect_equal(length(y), 3)\n}",
            "points": 1,
            "hidden": false,
            "success_message": null,
            "failure_message": null
          }
        },
        {
          "passed": true,
          "error": "",
          "test_case": {
            "name": "q3-2",
            "code": "{\n    testthat::expect_equal(y, c(\"hi there, a!\", \"hi there, b!\", \n        \"hi there, c!\"))\n}",
            "points": 2,
            "hidden": true,
            "success_message": "y is correct",
            "failure_message": "y is incorrect"
          }
        }
      ]
    }
  ]
}